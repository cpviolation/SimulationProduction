# EventType: 12165564
#
# Descriptor: [B+ -> (rho+ -> pi+ (pi0 -> gamma gamma)) (anti-D*0 -> (anti-D0 -> (K_S0 -> pi+ pi-) K+ K-) (pi0 -> gamma gamma))]cc
#
# NickName: Bu_Dst0rho+,D0pi0,KSKK=TightCut
#
# Cuts: LoKi::GenCutTool/TightCut
#
#InsertPythonCode:
##
#from Configurables import LoKi__GenCutTool
#from Gauss.Configuration import *
#Generation().SignalRepeatedHadronization.addTool( LoKi__GenCutTool,'TightCut')
#tightCut = Generation().SignalRepeatedHadronization.TightCut
#tightCut.Decay = '^[B+ => ^(D*(2007)~0 -> ^(D~0 => ^(KS0 => ^pi+ ^pi-) ^K+ ^K-) ^(pi0 -> ^gamma ^gamma)) ^(rho(770)+ => ^pi+ ^(pi0 -> ^gamma ^gamma))]CC'
#tightCut.Preambulo += [
#    'GVZ = LoKi.GenVertices.PositionZ()',
#    'from GaudiKernel.SystemOfUnits import millimeter',
#    'inAcc        = (in_range(0.010, GTHETA, 0.400))',
#    'goodB       = (GP > 35000 * MeV) & (GPT > 3500 * MeV) & (GTIME > 0.060 * millimeter)',
#    'goodDstar0       = (GP >  25000 * MeV) & (GPT > 4250 * MeV)',
#    'goodD0       = (GP >  22500 * MeV) & (GPT > 3750 * MeV)',
#    'goodD0K  = (GNINTREE( ("K+"==GABSID) & (GP > 1000 * MeV) & (GPT > 100 * MeV) & inAcc, 1) > 1.5)',
#    'goodKSPi  = (GNINTREE( ("pi+"==GABSID) & (GPT >  50 * MeV) & (GP >  1900 * MeV) & inAcc, 1) > 1.5)',
#    'goodKS       = (GP >  3500 * MeV) & (GPT > 400 * MeV) ',
#    'goodRhoPi = (GNINTREE( ("pi+"==GABSID) & (GP > 4500 * MeV) & (GPT > 400 * MeV) & inAcc, 1) > 0.5)',
#    'goodPi0Gamma = (GNINTREE( ("gamma"==GABSID) & ( (abs(GPX/GPZ) < 0.315)  &  (abs(GPY/GPZ) < 0.255) & ((abs( GPX/GPZ ) > 0.019)  |  (abs(GPY/GPZ) > 0.019))) , 1) > 0.5)'
#]
#tightCut.Cuts = {
#    '[B+]cc'          : 'goodB',
#    '[D*(2007)0]cc'   : 'goodDstar0',
#    '[rho(770)+]cc'   : 'goodRhoPi',
#    '[pi0]cc'         : 'goodPi0Gamma',
#    '[D0]cc'          : 'goodD0 & goodD0K',
#    '[KS0]cc'         : 'goodKS & goodKSPi',
#    }
#EndInsertPythonCode
#
# Documentation: B+ forced to D*0 rho+, D*0 forced to D0 pi0, D0 forced PHSP decay to KS K+ K-
# EndDocumentation
#
# PhysicsWG: B2OC
# Tested: Yes
# Responsible: Nathan Jurik
# Email: nathan.jurik@cern.ch
# Date: 20160913
# CPUTime: <1min
#
Alias MyD*0       D*0
Alias Myanti-D*0  anti-D*0
ChargeConj MyD*0  Myanti-D*0
Alias      MyD0        D0
Alias      Myanti-D0   anti-D0
ChargeConj MyD0        Myanti-D0
Alias myK_S0      K_S0
ChargeConj myK_S0 myK_S0
Alias        MyRho+     rho+
Alias        MyRho-     rho-
ChargeConj   MyRho+     MyRho-
Alias MyPi0      pi0
ChargeConj MyPi0  MyPi0
##
Decay B+sig
  1.000     Myanti-D*0  MyRho+               PHSP ;
Enddecay
CDecay B-sig
#
Decay Myanti-D*0
1.0000    Myanti-D0  MyPi0                       PHSP;
Enddecay
CDecay MyD*0
#
#
Decay MyRho+
  1.00000000  pi+ MyPi0                                  PHSP ;
Enddecay
Decay MyRho-
  1.00000000  pi- MyPi0                                  PHSP ;
Enddecay
#
#
Decay Myanti-D0
1.000     myK_S0 K+  K-        PHSP;
Enddecay
CDecay MyD0
#
Decay myK_S0
1.000     pi+  pi-               PHSP;
Enddecay
#
Decay MyPi0
  1.000   gamma gamma                PHSP;
Enddecay
#
End

